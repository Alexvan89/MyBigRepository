<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
         http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         id="WebApp_ID" version="3.0">
<!--1.加载springMVC   2.加载spring-->
  <!--1.加载spring配置文件-->
  <!--关联到spring主配置文件的路径地址,classpath根目录-->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:spring/applicationContext.xml</param-value>
  </context-param>
  <!--配置监听器,加载spring的配置文件-->
  <listener>
    <!--初始化方法中,把context对象存进了web最大域对象中-->
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!--配置过滤器,过滤编码格式为UTF-8,只支持post提交-->
  <filter>
    <filter-name>CharacterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <!--异步支持-->
    <async-supported>true</async-supported>
    <!--初始化,编码格式为UTF-8,只适用于post提交-->
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CharacterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <!--2.加载springMVC配置文件-->
  <!--配置DispatcherServlet,来加载springMVC配置,拦截所有的请求,都进入spring中的DispatcherServlet-->
  <!--1.解析请求路径 2.分配给对应方法来处理请求 3.通过视图解析器来找对应的jsp-->
  <servlet>
    <servlet-name>DispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:mvc/springMVC.xml</param-value>
    </init-param>
    <!--启动优先加载-->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>DispatcherServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
</web-app>
